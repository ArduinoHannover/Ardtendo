#ifndef DEFS_H
#define DEFS_H

#include <stdlib.h>
#include <inttypes.h>
#ifndef NULL
	#define NULL 0
#endif

typedef bool boolean;

typedef struct PlayerTAG {
	uint8_t id;			//Index used to find stored values
	uint8_t x;			//Position on the game surface, 0 is left
	uint8_t y;			//Position on the game surface, 0 is top
	uint8_t tarX;		//Target X coord. for enemy
	uint8_t tarY;		//Target Y coord. for enemy
	int16_t speed;		//Countdown how freqeuntly to move
	uint8_t travelDir;	//Uses directional defines below
	uint8_t color;		//Uses color defines below
	uint8_t inPlay;		//On the hunt = TRUE, in reserve = FALSE
	uint8_t dotCount;	/*For player tracks level completion
						  For enemy decides when to go inPlay*/
	uint8_t dotLimit;	//How many dots before this enemy is inPlay
	uint8_t speedMode;	//Index used to look up player speed
} Player;

typedef struct FruitTAG {
	boolean removed;
	uint32_t displayTill;
} Fruit;

uint32_t const board[36] = {
	0,
	0,
	0,
	0b00111111111111111111111111111100,
	0b00100000000000011000000000000100,
	0b00101111011111011011111011110100,
	0b00101111011111011011111011110100,
	0b00101111011111011011111011110100,
	0b00100000000000000000000000000100,
	0b00101111011011111111011011110100,
	0b00101111011011111111011011110100,
	0b00100000011000011000011000000100,
	0b00111111011111011011111011111100,
	0b00000001011111011011111010000000,
	0b00000001011000000000011010000000,
	0b00000001011011111111011010000000,
	0b00111111011010000001011011111100,
	0b00000000000010000001000000000000,
	0b00111111011010000001011011111100,
	0b00000001011011111111011010000000,
	0b00000001011000000000011010000000,
	0b00000001011011111111011010000000,
	0b00111111011011111111011011111100,
	0b00100000000000011000000000000100,
	0b00101111011111011011111011110100,
	0b00101111011111011011111011110100,
	0b00100011000000000000000011000100,
	0b00111011011011111111011011011100,
	0b00111011011011111111011011011100,
	0b00100000011000011000011000000100,
	0b00101111111111011011111111110100,
	0b00101111111111011011111111110100,
	0b00100000000000000000000000000100,
	0b00111111111111111111111111111100,
	0,
	0
};
uint32_t const dots[36] = {
	0,
	0,
	0,
	0,
	0b00011111111111100111111111111000,
	0b00010000100000100100000100001000,
	0b00010000100000100100000100001000,
	0b00010000100000100100000100001000,
	0b00011111111111111111111111111000,
	0b00010000100100000000100100001000,
	0b00010000100100000000100100001000,
	0b00011111100111100111100111111000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00000000100000000000000100000000,
	0b00011111111111100111111111111000,
	0b00010000100000100100000100001000,
	0b00010000100000100100000100001000,
	0b00011100111111100111111100111000,
	0b00000100100100000000100100100000,
	0b00000100100100000000100100100000,
	0b00011111100111100111100111111000,
	0b00010000000000100100000000001000,
	0b00010000000000100100000000001000,
	0b00011111111111111111111111111000,
	0,
	0,
	0
};

#define TRUE 1
#define FALSE 0

#define FOODCOLOR	0xFDD2
#define	BLACK		0x0000
#define	BLUE		0x001F
#define	RED			0xF800
#define	GREEN		0x07E0
#define CYAN		0x07FF
#define MAGENTA		0xF81F
#define YELLOW		0xFFE0
#define WHITE		0xFFFF
#define PINK		0xF81F
#define ORANGE		0xFDC5
#define GREY		0xA514//0x4208
#define LAVENDAR	0xC21F

#define BLUE_S    0
#define YELLOW_S  1
#define RED_S     2
#define PINK_S    3
#define ORANGE_S  4
#define CYAN_S    5
#define BLACK_S   6
#define GREY_S    7
#define WHITE_S   8
#define LAVENDAR_S  BLUE_S //9
#define GREEN_S   10

#define X_OFFSET -6
#define Y_OFFSET -10

//enemyMode types
#define SCATTER 0
#define CHASE 1
#define FRIGHT 2

//Index values for the speed array
#define SPEEDPLAYER         0
#define SPEEDENEMY          1
#define SPEEDPLAYERFRIGHT   2
#define SPEEDENEMYFRIGHT    3
#define SPEEDENEMYTUNNEL    4

#define PP1COL    3
#define PP2COL    28
#define PP1ROW    6
#define PP2ROW    26

#define UP      0
#define DOWN    1
#define LEFT    2
#define RIGHT   3
//Miscellaneous
#define ESCAPE  4
#define NOINPUT 5
#define BUTTON  6

#define FRUIT_Y 20
#define FRUIT_X 15

static const uint16_t colors[] = {
    BLUE,
    YELLOW,
    RED,
    PINK,
    ORANGE,
    CYAN,
    BLACK,
    GREY,
    WHITE,
    LAVENDAR,
    GREEN
};


const uint16_t speed[] = {  125, 133, 111, 200, 250,
                            111, 118, 105, 182, 222,
                            100, 105, 100, 167, 200,
                            111, 105, 111, 105, 200
                            };

const uint8_t dotLimitTable[] = { 0, 0, 0, 30, 60,
                                0, 0, 0, 0, 50 };

//Enemy Data
const uint8_t playerColor[5] = { YELLOW_S, RED_S, PINK_S, CYAN_S, ORANGE_S };
const uint8_t startingX[5] = { 15, 15, 17, 17, 14 };
const uint8_t startingY[5] = { 26, 14, 16, 17, 17 };
//Player doesn't have scatter so 0 index is retreat coordinates
const uint8_t scatterX[5] = { 15, 27, 4, 2, 29 };
const uint8_t scatterY[5] = { 14, 0, 0, 35, 35 };

static const uint16_t behaviors[] = {
    //In milliseconds
    7000, 20000, 7000, 20000, 5000, 20000, 10, 0 //trailing zero is a hack
    //TODO: add more behaviors for advancing levels (seriously that's never going to happen)
};



#endif //DEFS_H
